apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = null
if (keystorePropertiesFile.exists()) {
    keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary  'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.mrikso.apkrepacker"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 40
        versionName "1.0.4 beta"
        archivesBaseName = "ApkRepacker-v${versionName}(${versionCode})"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':apktool')
    implementation project(':custom-fab')
    implementation project(':common')
    implementation project(':colorpicker')
    implementation project(':expandablerecyclerview')
    implementation project(':treeview')
    implementation project(':photoview')
    implementation project(':vectormaster')
    implementation project(':codeeditor')
    implementation project(':md-dialog-core')

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.ext.kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    //androidx
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.fragment:fragment:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0-alpha01'
    implementation "androidx.work:work-runtime:2.5.0"

    //mvvm
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.0'
    // implementation 'androidx.navigation:navigation-fragment:2.3.0'
    //  implementation 'androidx.navigation:navigation-ui:2.3.0'
    // implementation "androidx.room:room-runtime:2.2.5"
    // annotationProcessor "androidx.room:room-compiler:2.2.5" // For Kotlin use kapt instead of annotationProcessor

    //material design
    implementation 'com.google.android.material:material:1.3.0-alpha03'

    //google utility lib
    implementation 'com.google.guava:guava:29.0-android'
    implementation 'com.google.code.gson:gson:2.8.6'
    //smali
    implementation 'org.smali:baksmali:2.4.0'
    implementation 'org.smali:smali:2.4.0'
    //commons io
    implementation 'commons-io:commons-io:2.8.0'
    //patcher
    implementation 'com.github.Cregrant.SmaliScissors:patcher:master-SNAPSHOT'
    //logs
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    //implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'me.zhanghai.java.functional:android:1.0.0'
    implementation 'me.zhanghai.android.fastscroll:library:1.1.4'
    implementation 'me.zhanghai.android.systemuihelper:library:1.0.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.jetbrains:annotations:19.0.0'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    // tests
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

configurations.all {
    //fix for Jitpack
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
